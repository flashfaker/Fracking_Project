------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/
> code/LogFiles/an_02_googletrends_state.txt
  log type:  text
 opened on:  24 Feb 2022, 23:09:22

. 
. /**************
>         Finding the Peak of Trends
>         ***************/
.         use "$basedir/f_google", clear

.         
.         encode state, gen(st)

.         gen state_fe = group(st)

.         gen year_month_fe = group(time)

.         local e "cluster(state_fe)" 

.         local f "year_month_fe"

.                         
.         * regressions with state and year month fixed effects, outputting residual
> s
.         reghdfe fracking, `e' absorb(`f') residuals(residuals)
(dropped 26 singleton observations)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      4,209
Absorbing 1 HDFE group                            F(   0,     34) =          .
Statistics robust to heteroskedasticity           Prob > F        =          .
                                                  R-squared       =     0.1861
                                                  Adj R-squared   =     0.0262
                                                  Within R-sq.    =     0.0000
Number of clusters (state_fe) =         35        Root MSE        =    22.3356

                              (Std. Err. adjusted for 35 clusters in state_fe)
------------------------------------------------------------------------------
             |               Robust
    fracking |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       _cons |   24.68805   .9493292    26.01   0.000     22.75878    26.61732
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-------------------------------------------------------+
   Absorbed FE | Categories  - Redundant  = Num. Coefs |
---------------+---------------------------------------|
 year_month_fe |       692           0         692     |
-------------------------------------------------------+

.         bysort st: egen highest_residual = max(residuals)

.         format highest_residual %10.0g

.         
.         * get the peak of the residuals
.         gen peak = 1 if highest_residual - residuals < 0.001
(4,200 missing values generated)

.         export delimited "$basedir/peak_googletrends1.csv", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/data/bas
> e/peak_googletrends1.csv saved

.         
.         * output only state-month combination with peaks
.         preserve 

.                 keep if peak == 1
(4,200 observations deleted)

.                 drop peak

.                 export delimited "$basedir/peak_googletrends2.csv", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/data/bas
> e/peak_googletrends2.csv saved

.         restore

.         
.         * get the upticks of google search trend
.                 gen se = _se[_cons]

.                 gen uptick_limit = 2*se // 2 times the standard errors from the fe
>  regressions

.                 gen upticks = 1 if residuals >= uptick_limit
(2,558 missing values generated)

.                 * get first uptick
.                 preserve 

.                         keep if upticks == 1
(2,558 observations deleted)

.                         sort state time

.                         collapse (first) time upticks, by(state)

.                         rename upticks first_uptick

.                         save "$interdir/first_uptick", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/data/int
> ermediate/first_uptick.dta saved

.                 restore

.                 drop uptick_limit upticks

.                 * get bigger uptick (one half of the highest residual)
.                 gen uptick_limit = highest_residual / 2

.                 gen upticks = 1 if residuals >= uptick_limit
(3,879 missing values generated)

.                 * get the first big uptick
.                 preserve 

.                         keep if upticks == 1
(3,879 observations deleted)

.                         sort state time

.                         collapse (first) time upticks, by(state)

.                         rename upticks first_biguptick

.                         save "$interdir/first_biguptick", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/data/int
> ermediate/first_biguptick.dta saved

.                 restore

.                 drop upticks uptick_limit

.                 
.                 merge 1:1 state time using "$interdir/first_uptick" 

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,200
        from master                     4,200  (_merge==1)
        from using                          0  (_merge==2)

    matched                                35  (_merge==3)
    -----------------------------------------

.                 drop _merge

.                 merge 1:1 state time using "$interdir/first_biguptick"

    Result                           # of obs.
    -----------------------------------------
    not matched                         4,200
        from master                     4,200  (_merge==1)
        from using                          0  (_merge==2)

    matched                                35  (_merge==3)
    -----------------------------------------

.                 drop _merge

.                 rename time month

.                 merge m:1 state using "$basedir/disclosurerule_datePB.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,178
        from master                     2,178  (_merge==1)
        from using                          0  (_merge==2)

    matched                             2,057  (_merge==3)
    -----------------------------------------

.                         keep if _merge == 3 // keep only disclosure states
(2,178 observations deleted)

.                         drop _merge

.                 * change date to month
.                 gen disclosure_month = mofd(time)

.                 format disclosure_month %tm

.                 drop time

.                 merge m:1 state using "$basedir/disclosurerule_dateUpdated.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                           121
        from master                       121  (_merge==1)
        from using                          0  (_merge==2)

    matched                             1,936  (_merge==3)
    -----------------------------------------

.                         keep if _merge == 3 // keep only disclosure states (get ri
> d of Michigan)
(121 observations deleted)

.                         drop _merge

.                 * change disclosure beginning date to monthly date
.                 gen disclosure_start_month = mofd(time)

.                 format disclosure_start_month %tm

.                 drop time

.                 rename month time

.                 
.                 * make sure Michigan is not in the sample
.                 drop if state == "michigan"
(0 observations deleted)

.                 save "$basedir/ggsearch_dates", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/data/bas
> e/ggsearch_dates.dta saved

.                 
. /**************
>         Summary Statistics 
>         ***************/
.         
. 
end of do-file

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

. 
end of do-file

. br

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

.         collapse (mean) mean_diff = diff (median) median_diff = diff (first) count
> , by(before_state)

.         save "$tabdir/Summary Statistics (first big uptick (Google))", replace
(note: file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/o
> utput/tables/Summary Statistics (first big uptick (Google)).dta not found)
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/output/t
> ables/Summary Statistics (first big uptick (Google)).dta saved

. 
end of do-file

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         ***************/
.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

. 
end of do-file

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

.         collapse (mean) mean_diff = diff (median) median_diff = diff (first) count
> , by(before_state)

.         save "$tabdir/Summary Statistics (first big uptick (Google))", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/output/t
> ables/Summary Statistics (first big uptick (Google)).dta saved

. 
end of do-file

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

. 
end of do-file

. use "/Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/output
> /tables/Summary Statistics (first big uptick (Google)).dta", clear

. br

. br

. use "/Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/output
> /tables/Summary Statistics (first big uptick (Media)).dta"

. br

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

.         collapse (mean) mean_diff = diff (median) median_diff = diff (first) count
> , by(before_state)

. 
end of do-file

. br

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

. 
end of do-file

. br

. collapse (total) diff
(total) invalid statistic
r(198);

. egen diff_mean = mean(diff)

. br

. egen diff_median = median(diff)

. br

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

.         egen diff_mean = mean(diff)

.         collapse (mean) mean_diff = diff (median) median_diff = diff (first) count
> , by(before_state)

.         save "$tabdir/Summary Statistics (first big uptick (Google))", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/output/t
> ables/Summary Statistics (first big uptick (Google)).dta saved

. 
end of do-file

. br

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

.         use "$basedir/ggsearch_dates", clear

.         * First Big Uptick and Legislative Start Date
.         rename disclosure_start_month disc_time

.         * generate first big uptick media coverage time to compare with disclosure
>  time
.         gen firstbiguptick_time = first_biguptick*time
(1,920 missing values generated)

.         format firstbiguptick_time %tm

.         * collapse to state level 
.         collapse (max) disc_time firstbiguptick_time, by(state)

.         gen before_state = 1 if disc_time <= firstbiguptick_time 
(7 missing values generated)

.         replace before_state = 0 if before_state >=.
(7 real changes made)

.         bysort before_state: gen count = _N

.         gen diff = firstbiguptick_time - disc_time

.         egen diff_mean_total = mean(diff)

.         collapse (mean) mean_diff = diff (median) median_diff = diff (first) count
>  diff_mean_total, by(before_state)

.         save "$tabdir/Summary Statistics (first big uptick (Google))", replace
file /Users/zsong/Dropbox/Fracking Disclosure regulation project/2. code/zs/output/t
> ables/Summary Statistics (first big uptick (Google)).dta saved

. 
end of do-file

. br

. do "/var/folders/j0/m4ml1k5n497d6fwz1z9j80040000gn/T//SD20985.000000"

. * Analyze Google Search Trends (find the peak)
. local fname an_01_mediacoverage

. 
. /*******************************************************************************
> 
> * obtain the peaks and upticks of google search trend
> 
> Author: Zirui Song
> Date Created: Feb 5th, 2022
> Date Modified: Feb 24th, 2022
> 
> ********************************************************************************/
. 
. /**************
>         Basic Set-up
>         ***************/
.         clear all

.         set more off, permanently
(set more preference recorded)

.         capture log close
